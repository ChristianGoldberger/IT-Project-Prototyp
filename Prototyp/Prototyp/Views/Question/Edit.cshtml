@model Helper.Question
@{
	ViewBag.Title = "Bearbeiten";
}

@if (Model.Key != null)
{
	using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()
		<form class="form-horizontal">
			<fieldset style="margin-top: 10px">
				<legend>Frage @Html.Raw(Model.Key)</legend>
				@Html.ValidationSummary(true)
				<div class="form-group" id="keyForm" style="margin-left:0px;margin-right:0px">
					<div class="row">
						<div class="col-sm-2 col-lg-2">
							<label for="Key" class="control-label">Key</label>
						</div>
						<div class="col-sm-10 col-lg-10">
							@Html.EditorFor(model => model.Key, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Key)
						</div>
					</div>
				</div>
				<div class="form-group" id="descriptionForm" style="margin-left:0px;margin-right:0px">
					<div class="row">
						<div class="col-sm-2 col-lg-2">
							<label for="description" class="control-label">Beschreibung</label>
						</div>
						<div class="col-sm-10 col-lg-10">
							@Html.TextAreaFor(model => model.Text, new { @rows = "3", @class = "form-control" })
							@Html.ValidationMessageFor(model => model.Text)
						</div>
					</div>
				</div>
				<div class="form-group" id="effectForm" style="margin-left:0px;margin-right:0px">
					<div class="row">
						<div class="col-sm-2 col-lg-2">
							<label for="effect" class="control-label">Auswirkung</label>
						</div>
						<div class="col-sm-10 col-lg-10">
							<div class="radio">
								<label>
									@Html.RadioButtonFor(m => m.Effect, "positiv")
									positiv
								</label>
							</div>
							<div class="radio">
								<label>
									@Html.RadioButtonFor(m => m.Effect, "negativ")
									negativ
								</label>
							</div>
							<div class="radio">
								<label>
									@Html.RadioButtonFor(m => m.Effect, "neutral")
									neutral
								</label>
							</div>
							@Html.ValidationMessageFor(model => model.Effect)
						</div>
					</div>
				</div>
				<div class="form-group" id="weightForm" style="margin-left:0px;margin-right:0px">
					<div class="row">
						<div class="col-sm-2 col-lg-2">
							<label for="Key" class="control-label">Gewichtung</label>
						</div>
						<div class="col-sm-10 col-lg-10">
							@Html.TextBoxFor(model => model.Weight, new { @class = "form-control", style = "width:50px" })
							@Html.ValidationMessageFor(model => model.Weight)
						</div>
					</div>
				</div>

				<div class="row">
					<div class="col-sm-5 col-lg-5">
						<input type="submit" value="Speichern" class="btn btn-primary" />
						<button class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Question")';return false;">Zurück</button>
					</div>
				</div>
			</fieldset>
		</form>

		@*@Html.AntiForgeryToken()
			<div class="form-horizontal">
				<h4>Question "@Html.Raw(Model.Key)"</h4>
				<hr />
				@Html.ValidationSummary(true)

				<div class="form-group">
					@Html.LabelFor(model => model.Key, new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Key, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @placeholder = "fill in", @style = "width: 900px;max-width: 900px;" } })
						@Html.ValidationMessageFor(model => model.Key)
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(model => model.Text, new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control", @placeholder = "fill in", @style = "width: 900px;max-width: 900px;" } })
						@Html.ValidationMessageFor(model => model.Text)
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(model => model.Effect, new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EnumDropDownListFor(model => model.Effect)
						@Html.ValidationMessageFor(model => model.Effect)
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(model => model.Weight, new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.TextBoxFor(model => model.Weight, new { style = "width:50px" })
						@Html.ValidationMessageFor(model => model.Weight)
					</div>
				</div>
				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Save" class="btn btn-default" />
					</div>
				</div>
			</div>*@
	}
}
else
{
	using (Html.BeginForm())
	{
	@Html.AntiForgeryToken()
	<form class="form-horizontal">
		<fieldset style="margin-top: 10px">
			<legend>Neue Frage</legend>
			@Html.ValidationSummary(true)
			<div class="form-group" id="keyForm" style="margin-left:0px;margin-right:0px">
				<div class="row">
					<div class="col-sm-2 col-lg-2">
						<label for="Key" class="control-label">Key</label>
					</div>
					<div class="col-sm-10 col-lg-10">
						@Html.EditorFor(model => model.Key, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Key)
					</div>
				</div>
			</div>
			<div class="form-group" id="descriptionForm" style="margin-left:0px;margin-right:0px">
				<div class="row">
					<div class="col-sm-2 col-lg-2">
						<label for="description" class="control-label">Beschreibung</label>
					</div>
					<div class="col-sm-10 col-lg-10">
						@Html.TextAreaFor(model => model.Text, new { @rows = "3", @class = "form-control" })
						@Html.ValidationMessageFor(model => model.Text)
					</div>
				</div>
			</div>
			<div class="form-group" id="effectForm" style="margin-left:0px;margin-right:0px">
				<div class="row">
					<div class="col-sm-2 col-lg-2">
						<label for="effect" class="control-label">Auswirkung</label>
					</div>
					<div class="col-sm-10 col-lg-10">
						<div class="radio">
							<label>
								@Html.RadioButtonFor(m => m.Effect, "positiv")
								positiv
							</label>
						</div>
						<div class="radio">
							<label>
								@Html.RadioButtonFor(m => m.Effect, "negativ")
								negativ
							</label>
						</div>
						<div class="radio">
							<label>
								@Html.RadioButtonFor(m => m.Effect, "neutral")
								neutral
							</label>
						</div>
						@Html.ValidationMessageFor(model => model.Effect)
					</div>
				</div>
			</div>
			<div class="form-group" id="weightForm" style="margin-left:0px;margin-right:0px">
				<div class="row">
					<div class="col-sm-2 col-lg-2">
						<label for="Key" class="control-label">Gewichtung</label>
					</div>
					<div class="col-sm-10 col-lg-10">
						@Html.TextBoxFor(model => model.Weight, new { @class = "form-control", style = "width:50px" })
						@Html.ValidationMessageFor(model => model.Weight)
					</div>
				</div>
			</div>

			<div class="row">
				<div class="col-sm-5 col-lg-5">
					<input type="submit" value="Speichern" class="btn btn-primary" />
					<button class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Question")';return false;">Zurück</button>
					
				</div>
			</div>
		</fieldset>
	</form>


	@*@Html.AntiForgeryToken()
	<div class="form-horizontal">
		<h4>New question</h4>
		<hr />
		@Html.ValidationSummary(true)

		<div class="form-group">
			@Html.LabelFor(model => model.Key, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Key, new { htmlAttributes = new { @class = "form-control", @placeholder = "fill in", @style = "width: 900px;max-width: 900px;" } })
				@Html.ValidationMessageFor(model => model.Key)
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.Text, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control", @placeholder = "fill in", @style = "width: 900px;max-width: 900px;" } })
				@Html.ValidationMessageFor(model => model.Text)
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.Effect, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EnumDropDownListFor(model => model.Effect)
				@Html.ValidationMessageFor(model => model.Effect)
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.Weight, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextBoxFor(model => model.Weight, new { style = "width:50px" })
				@Html.ValidationMessageFor(model => model.Weight)
			</div>
		</div>
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</div>
	</div>*@
}
}
@section scripts
{
	<script src="~/Scripts/editQuestion.js" type="text/javascript"></script>
}