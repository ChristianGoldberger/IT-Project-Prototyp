@model Helper.Question
@{
	ViewBag.Title = "Frage bearbeiten";
}

<form class="form-horizontal">
	<fieldset style="margin-top: 10px">
		<legend>Frage "@Html.Raw(Model.Key)"</legend>
		<div class="form-group" id="keyForm" style="margin-left:0px;margin-right:0px">
			<div class="row">
				<div class="col-sm-2 col-lg-2">
					<label for="Key" class="control-label">Key</label>
				</div>
				<div class="col-sm-10 col-lg-10">
					<input tpye="text" class="form-control" id="key" />
				</div>
			</div>
		</div>
		<div class="form-group" id="descriptionForm" style="margin-left:0px;margin-right:0px">
			<div class="row">
				<div class="col-sm-2 col-lg-2">
					<label for="description" class="control-label">Beschreibung</label>
				</div>
				<div class="col-sm-10 col-lg-10">
					<textarea class="form-control" rows="3" id="description"> </textarea>
				</div>
			</div>
		</div>
		<div class="form-group" id="effectForm" style="margin-left:0px;margin-right:0px">
			<div class="row">
				<div class="col-sm-2 col-lg-2">
					<label for="effect" class="control-label">Auswirkung</label>
				</div>
				<div class="col-sm-10 col-lg-10">
					<div class="radio">
						<label>
							<input type="radio" name="optionsRadios" id="optionsRadios1" value="positiv" checked="">
							positiv
						</label>
					</div>
					<div class="radio">
						<label>
							<input type="radio" name="optionsRadios" id="optionsRadios2" value="negativ">
							negativ
						</label>
					</div>
					<div class="radio">
						<label>
							<input type="radio" name="optionsRadios" id="optionsRadios3" value="neutral">
							neutral
						</label>
					</div>
				</div>
			</div>
		</div>
		<div class="form-group" id="weightForm" style="margin-left:0px;margin-right:0px">
			<div class="row">
				<div class="col-sm-2 col-lg-2">
					<label for="Key" class="control-label">Gewichtung</label>
				</div>
				<div class="col-sm-10 col-lg-10">
					<input tpye="text" style="width:50px" class="form-control" id="key" />
				</div>
			</div>
		</div>

		<div class="row">
			<div class="col-sm-5 col-lg-5">
				<button id="btnSave" class="btn btn-primary">Speichern</button>
			</div>
		</div>
	</fieldset>
</form>





<br />
@if (Model.Key != null)
{
	using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()
		<div class="form-horizontal">
			<h4>Question "@Html.Raw(Model.Key)"</h4>
			<hr />
			@Html.ValidationSummary(true)

			<div class="form-group">
				@Html.LabelFor(model => model.Key, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Key, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @placeholder = "fill in", @style = "width: 900px;max-width: 900px;" } })
					@Html.ValidationMessageFor(model => model.Key)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Text, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control", @placeholder = "fill in", @style = "width: 900px;max-width: 900px;" } })
					@Html.ValidationMessageFor(model => model.Text)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Effect, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EnumDropDownListFor(model => model.Effect)
					@Html.ValidationMessageFor(model => model.Effect)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Weight, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.TextBoxFor(model => model.Weight, new { style = "width:50px" })
					@Html.ValidationMessageFor(model => model.Weight)
				</div>
			</div>
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Save" class="btn btn-default" />
				</div>
			</div>
		</div>
	}
}
else
{
	using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()
		<div class="form-horizontal">
			<h4>New question</h4>
			<hr />
			@Html.ValidationSummary(true)

			<div class="form-group">
				@Html.LabelFor(model => model.Key, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Key, new { htmlAttributes = new { @class = "form-control", @placeholder = "fill in", @style = "width: 900px;max-width: 900px;" } })
					@Html.ValidationMessageFor(model => model.Key)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Text, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control", @placeholder = "fill in", @style = "width: 900px;max-width: 900px;" } })
					@Html.ValidationMessageFor(model => model.Text)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Effect, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EnumDropDownListFor(model => model.Effect)
					@Html.ValidationMessageFor(model => model.Effect)
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.Weight, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.TextBoxFor(model => model.Weight, new { style = "width:50px" })
					@Html.ValidationMessageFor(model => model.Weight)
				</div>
			</div>
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Save" class="btn btn-default" />
				</div>
			</div>
		</div>
	}
}
<div>
	@Html.ActionLink("Back to questions", "Index")
</div>
<br />